// import type { NextPage } from 'next'
// import Head from 'next/head'
// import Image from 'next/image'
// import styles from '../styles/Home.module.css'

// const Home: NextPage = () => {
//   return (
//     <div className={styles.container}>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <main className={styles.main}>
//         <h1 className={styles.title}>
//           Welcome to <a href="https://nextjs.org">Next.js!</a>
//         </h1>

//         <p className={styles.description}>
//           Get started by editing{' '}
//           <code className={styles.code}>pages/index.tsx</code>
//         </p>

//         <div className={styles.grid}>
//           <a href="https://nextjs.org/docs" className={styles.card}>
//             <h2>Documentation &rarr;</h2>
//             <p>Find in-depth information about Next.js features and API.</p>
//           </a>

//           <a href="https://nextjs.org/learn" className={styles.card}>
//             <h2>Learn &rarr;</h2>
//             <p>Learn about Next.js in an interactive course with quizzes!</p>
//           </a>

//           <a
//             href="https://github.com/vercel/next.js/tree/canary/examples"
//             className={styles.card}
//           >
//             <h2>Examples &rarr;</h2>
//             <p>Discover and deploy boilerplate example Next.js projects.</p>
//           </a>

//           <a
//             href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//           >
//             <h2>Deploy &rarr;</h2>
//             <p>
//               Instantly deploy your Next.js site to a public URL with Vercel.
//             </p>
//           </a>
//         </div>
//       </main>

//       <footer className={styles.footer}>
//         <a
//           href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//           target="_blank"
//           rel="noopener noreferrer"
//         >
//           Powered by{' '}
//           <span className={styles.logo}>
//             <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
//           </span>
//         </a>
//       </footer>
//     </div>
//   )
// }

// export default Home

import type { NextPage } from "next";
import Head from "next/head";
import { useVisitorData } from "@fingerprintjs/fingerprintjs-pro-react";
import { useState, useEffect } from "react";
import md5 from "md5";

const Home: NextPage = () => {
  const [extendedResult, updateExtendedResult] = useState(false);
  const [dataId, setDataId] = useState<any>();
  const { isLoading, error, data, getData } = useVisitorData(
    { extendedResult },
    { immediate: true }
  );
  console.log(data?.visitorId);
  const reloadData = () => {
    getData({ ignoreCache: true });
  };

  const onChangeExtendedResult = (e: any) => {
    updateExtendedResult(e.target.checked);
  };

  useEffect(() => { 
    console.log(dataId);
  });
  const returnHash = () => {
    if (data) {
      const hash = md5(data.visitorId);
      setDataId(hash);
    }
  };

  return (
    <div>
      <Head>
        <title>FingerprintJS Pro NextJS Demo</title>
        <meta
          name="description"
          content="Check if fingerprintjs-pro-react integration works with NextJS SSR"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>FingerprintJS Pro NextJS Demo</h1>
      <div>
        <div>
          <button onClick={reloadData} type="button">
            Reload data
          </button>
          <label>
            <input
              type="checkbox"
              onChange={onChangeExtendedResult}
              checked={extendedResult}
            />
            Extended result
          </label>
        </div>
        <h4>
          VisitorId: <span>{isLoading ? "Loading..." : data?.visitorId}</span>
        </h4>
        <h4>Full visitor data:</h4>
        <pre>{error ? error.message : JSON.stringify(data, null, 2)}</pre>
        <button onClick={returnHash}>Enviar</button>
      </div>
    </div>
  );
};

export default Home;
